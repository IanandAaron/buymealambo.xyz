{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","GenerateButton","props","React","useState","open","setOpen","code","src","buttonText","Button","variant","startIcon","onClick","Modal","onClose","Box","sx","Typography","id","component","text","ReactDOMServer","renderToStaticMarkup","language","showLineNumbers","theme","dracula","wrapLines","App","state","handleChange","e","setState","target","value","className","ref","el","div","Container","maxWidth","Grid","container","spacing","alignItems","minHeight","item","xs","TextField","label","onChange","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iZAQMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAGL,SAASC,EAAeC,GACtB,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAGMC,EAAO,wBAAQC,IAAI,4EAA4EC,WAAYP,EAAMO,aACvH,OACE,gCACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAW,cAAC,IAAD,IAAgBC,QALxC,kBAAMP,GAAQ,IAK7B,6BACA,cAACQ,EAAA,EAAD,CACET,KAAMA,EACNU,QAPc,kBAAMT,GAAQ,IAQ5B,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAACU,EAAA,EAAD,CAAKC,GAAI1B,EAAT,UACE,cAAC2B,EAAA,EAAD,CAAYC,GAAG,oBAAoBR,QAAQ,KAAKS,UAAU,KAA1D,gCAGA,cAAC,IAAD,CACEC,KAAMC,IAAeC,qBAAqBhB,GAC1CiB,SAAU,aACVC,iBAAiB,EACjBC,MAAOC,IACPC,WAAS,Y,IAQfC,E,4MACJC,MAAQ,CACNrB,WAAY,I,EAGdsB,aAAe,SAACC,GAAD,OAAO,EAAKC,SAAS,CACpCxB,WAAYuB,EAAEE,OAAOC,S,4CAGrB,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,eAAeC,IAAK,SAAAC,GAAE,OAAK,EAAKC,IAAMD,GAArD,SACE,cAACE,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAStD,MAAO,CAAEuD,UAAW,SAApE,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,MAEF,cAACN,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAW9B,GAAG,iBAAiB+B,MAAM,cAAcvC,QAAQ,WAAWwC,SAAUC,KAAKrB,iBAEvF,cAACW,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACE,cAAC/C,EAAD,CAAgBQ,WAAY2C,KAAKtB,MAAMrB,4B,GAtBrCN,IAAMkD,WAgCTxB,ICvEAyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0762bd44.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server'\nimport {Container,Button,Grid,TextField,Modal,Typography,Box} from '@mui/material'\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport CachedIcon from '@mui/icons-material/Cached'\nimport { CopyBlock, dracula } from \"react-code-blocks\";\nimport './App.css';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction GenerateButton(props) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const code = <script src=\"https://cdn.jsdelivr.net/gh/isurewould/phantom-wallet-button@main/main.js\" buttonText={props.buttonText}></script>\n  return (\n    <div>\n      <Button variant=\"contained\" startIcon={<CachedIcon />} onClick={handleOpen}>Generate Button</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Javascript Snippet\n          </Typography>\n          <CopyBlock\n            text={ReactDOMServer.renderToStaticMarkup(code)}\n            language={\"javascript\"}\n            showLineNumbers={false}\n            theme={dracula}\n            wrapLines\n          />\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  state = {\n    buttonText: ''\n  }\n\n  handleChange = (e) => this.setState({\n\t\tbuttonText: e.target.value\n\t})\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"CreateButton\" ref={el => (this.div = el)}>\n          <Container maxWidth=\"sm\">\n            <Grid container spacing={0} alignItems=\"center\" style={{ minHeight: '100vh' }}>\n              <Grid item xs={2}>\n                <AccountBalanceWalletIcon />\n              </Grid>\n              <Grid item xs={5}>\n                <TextField id=\"outlined-basic\" label=\"Button Text\" variant=\"outlined\" onChange={this.handleChange} />\n              </Grid>\n              <Grid item xs={5}>\n                <GenerateButton buttonText={this.state.buttonText}/>\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}